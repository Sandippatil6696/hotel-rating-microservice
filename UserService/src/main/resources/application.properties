spring.application.name=userService
#server port
server.port=8081

#for databse configuration 
spring.datasource.url=jdbc:mysql://localhost:3306/usermicroservicedb
spring.datasource.username=root
spring.datasource.password=sandip
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
spring.jpa.show-sql=true

#for making eureka client
#eureka.client.fetch-registry=true
#eureka.instance.prefer-ip-address=true
#eureka.client.register-with-eureka=true
#eureka.client.service-url.defaultZone=http://localhost:8761/eureka

#import common  configuration from config server 
spring.config.import=configserver:http://localhost:8085


#circuitbreaker configuration
#actuator config
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=always

#resilence 4j configuration 
resilience4j.circuitbreaker.instances.HotelRatingcb.register-health-indicator=true
resilience4j.circuitbreaker.instances.HotelRatingcb.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.HotelRatingcb.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.HotelRatingcb.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.HotelRatingcb.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.HotelRatingcb.wait-duration-in-open-state=6s
resilience4j.circuitbreaker.instances.HotelRatingcb.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.HotelRatingcb.sliding-window-size=10
resilience4j.circuitbreaker.instances.HotelRatingcb.sliding-window-type=count-based

#retry module configuration
resilience4j.retry.instances.HotelRatingRetry.max-attempts=3
resilience4j.retry.instances.HotelRatingRetry.wait-duration=5s


#rate limitor config
resilience4j.ratelimiter.instances.userRateLimitor.limit-refresh-period=4s
resilience4j.ratelimiter.instances.userRateLimitor.limit-for-period=2
resilience4j.ratelimiter.instances.userRateLimitor.timeout-duration=2s